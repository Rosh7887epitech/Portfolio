/**
 * @mainpage 🌀 Zappy Project — Documentation
 *
 * Welcome to the official documentation of the **Zappy Project**! 🎉
 *
 * \image html test.png "Zappy test" width=600px
 *
 * Zappy is a network-based multiplayer strategy game where teams of AI-controlled players compete
 * on the mystical planet **Trantor** to achieve the ultimate goal: having at least 6 players
 * reach the maximum elevation level (level 8).
 *
 * ---
 *
 * ## 🌍 About Trantor
 *
 * The game takes place on **Trantor**, a spherical world with zero-relief planes. Players can walk
 * through the edges of the map (wrapping around like a torus), creating an infinite exploration experience.
 *
 * The world is rich in resources including:
 * - 🍖 **Food**: Essential for survival (1 unit = 126 time units of life)
 * - 💎 **Six types of stones**: linemate, deraumere, sibur, mendiane, phiras, thystame
 *
 * ---
 *
 * ## 🎯 Game Objectives
 *
 * - **Survival**: Collect food to maintain life energy
 * - **Resource Gathering**: Collect precious stones scattered across Trantor
 * - **Team Collaboration**: Work with teammates to perform elevation rituals
 * - **Strategic Evolution**: Progress through 8 elevation levels using specific stone combinations
 * - **Victory**: Be the first team to get 6 players to the maximum level (8)
 *
 * ---
 *
 * ## 🏗️ Architecture Overview
 *
 * The Zappy project consists of three main components:
 *
 * ### 🖥️ Server (zappy_server)
 * - **Language**: C
 * - **Role**: World simulation, game logic, resource spawning
 * - **Features**: TCP socket handling, multiplexing with `poll()`, time management
 *
 * ### 🎮 GUI Client (zappy_gui)
 * - **Language**: C++
 * - **Role**: Real-time visualization of the game world
 * - **Features**: 2D/3D rendering, player tracking, resource visualization
 *
 * ### 🤖 AI Client (zappy_ai)
 * - **Language**: Python
 * - **Role**: Autonomous player control and strategy implementation
 * - **Features**: Decision making, team coordination, resource management
 *
 * ---
 *
 * ## 📂 Project Structure
 *
 * ```
 * Zappynian/
 * ├── server/          # Game server implementation (C)
 * ├── gui/             # Graphical client (C++)
 * ├── ai/              # AI client implementation
 * ├── libzappy_net/    # Network communication library
 * ├── docs/            # Documentation and guides
 * └── tests/           # Unit and integration tests
 * ```
 *
 * ---
 *
 * ## 🔮 Elevation System
 *
 * Players advance through levels by performing **incantation rituals** that require:
 * - Specific combinations of stones
 * - Minimum number of same-level players on the same tile
 * - 300 time units to complete the ritual
 *
 * Each successful elevation increases vision range and unlocks new strategic possibilities.
 *
 * ---
 *
 * ## 🎮 Key Features
 *
 * - **🌐 Network Multiplayer**: TCP-based client-server architecture
 * - **👁️ Vision System**: Level-based field of view with strategic implications
 * - **📡 Broadcasting**: Sound-based communication system between players
 * - **🥚 Reproduction**: Fork command allows players to create new team members
 * - **⚡ Real-time Simulation**: Time-based action execution with configurable frequency
 * - **🎯 Strategic Depth**: Resource management, positioning, and timing are crucial
 *
 * ---
 *
 * ## 🛠️ Technical Highlights
 *
 * - **Multi-language Implementation**: C server, C++ GUI, Python AI
 * - **Socket Multiplexing**: Efficient handling of multiple client connections
 * - **Protocol Design**: Well-defined communication protocols between components
 * - **Resource Management**: Dynamic resource spawning and distribution algorithms
 * - **3D Visualization**: Modern rendering techniques for immersive experience
 *
 * ---
 *
 * ## 🔗 Navigation
 *
 * - 🏠 \ref getting_started "Getting Started" - Quick setup and launch instructions
 * - 📖 \ref user_guide "User Guide" - Complete setup and gameplay instructions
 * - ❓ \ref faq "FAQ" - Frequently asked questions and troubleshooting
 * - 📡 \ref protocol "Network Protocol" - Technical communication specifications
 * - 🛠️ [GitHub](https://github.com/My-Epitech-Organisation/Raytracer)
 *
 * ---
 *
 * @author Santiago
 * @date 2025-06-17
 * @version 1.0
 */
